#!/bin/bash
# @author madebycm (2025-01-26)
# Sandbox launcher - mounts current directory as /project

# Get current directory
CURRENT_DIR="$(pwd)"

# Get sandbox directory from script location
SANDBOX_DIR="$(dirname "$(readlink -f "$0")")"

# Export project path for docker-compose
export PROJECT_PATH="$CURRENT_DIR"

# Change to sandbox directory
cd "$SANDBOX_DIR"

# Handle stop command
if [ "$1" = "stop" ]; then
    echo "Stopping sandbox container..."
    docker-compose down
    exit 0
fi

# Check if container is running
if [ "$(docker ps -q -f name=persistent-sbox)" ]; then
    # Container is running, ask user what to do
    echo "Sandbox container is already running."
    # Get the currently mounted directory
    MOUNTED_DIR=$(docker inspect persistent-sbox --format '{{ range .Mounts }}{{ if eq .Destination "/project" }}{{ .Source }}{{ end }}{{ end }}')
    echo "Currently mounted: $MOUNTED_DIR â†’ /project"
    echo ""
    echo "What would you like to do?"
    echo "1) Enter existing container"
    echo "2) Create new instance"
    echo -n "Choice (1/2): "
    read -r choice
    
    case "$choice" in
        1)
            echo "Entering existing sandbox container..."
            docker exec -it persistent-sbox /bin/bash
            ;;
        2)
            echo "Stopping existing container and creating new instance..."
            docker-compose down
            echo "Mounting $CURRENT_DIR as /project in sandbox..."
            docker-compose up -d --build
            docker-compose exec sbox /bin/bash
            ;;
        *)
            echo "Invalid choice. Exiting."
            exit 1
            ;;
    esac
else
    # Container not running
    echo "Mounting $CURRENT_DIR as /project in sandbox..."
    
    # Check if container exists but is stopped
    if [ "$(docker ps -aq -f name=persistent-sbox)" ]; then
        # Container exists but stopped, start it
        docker-compose up -d
    else
        # First run, build and start
        docker-compose up -d --build
    fi
    
    docker-compose exec sbox /bin/bash
fi
